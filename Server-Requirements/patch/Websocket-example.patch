xIndex: specialpurpose/ecommerce/build.xml
===================================================================
--- specialpurpose/ecommerce/build.xml	(revision 1744351)
+++ specialpurpose/ecommerce/build.xml	(working copy)
@@ -26,11 +26,12 @@
     <!-- ================================================================== -->
 
     <property name="desc" value="Ecommerce Component"/>
-    <property name="name" value="ofbiz-ecommerce"/>
+    <property name="name" value="ofbiz-ecommerce-discoverable"/>
     <property name="ofbiz.home.dir" value="../.."/>
 
     <path id="local.class.path">
         <!--<fileset dir="${lib.dir}" includes="*.jar"/>-->
+        <fileset dir="../../framework/catalina/lib" includes="*.jar"/>
         <fileset dir="../../framework/base/lib" includes="*.jar"/>
         <fileset dir="../../framework/base/lib/j2eespecs" includes="*.jar"/>
         <fileset dir="../../framework/base/build/lib" includes="*.jar"/>
Index: specialpurpose/ecommerce/ofbiz-component.xml
===================================================================
--- specialpurpose/ecommerce/ofbiz-component.xml	(revision 1744351)
+++ specialpurpose/ecommerce/ofbiz-component.xml	(working copy)
@@ -76,5 +76,11 @@
         location="webapp/ecomseo"
         mount-point="/ecomseo"
         app-bar-display="false"/>
+    <webapp name="websocket"
+        title="websockets"
+        server="default-server"
+        location="webapp/websocket"
+        mount-point="/websocket"
+        app-bar-display="false"/>
 </ofbiz-component>
 
Index: specialpurpose/ecommerce/src/org/ofbiz/ecommerce/WebSocketServer.java
===================================================================
--- specialpurpose/ecommerce/src/org/ofbiz/ecommerce/WebSocketServer.java	(revision 0)
+++ specialpurpose/ecommerce/src/org/ofbiz/ecommerce/WebSocketServer.java	(working copy)
@@ -0,0 +1,61 @@
+package org.ofbiz.ecommerce;
+import java.util.*;
+import java.io.IOException;
+import java.nio.ByteBuffer;
+import javax.websocket.OnMessage;
+import javax.websocket.OnOpen;
+import javax.websocket.Session;
+import javax.websocket.server.ServerEndpoint;
+import javax.websocket.OnClose;
+import org.json.*;
+@ServerEndpoint("/websocket")
+public class WebSocketServer {
+   
+    private static  HashMap<String, String[]> InfoMap = new HashMap<String, String[]>();
+    private static  HashMap<String, Session> SocketMap = new HashMap<String, Session>();
+    public  String[] getInfoMap(String key)
+    {
+       return InfoMap.get(key);
+    }
+   
+     @OnOpen
+    public void onOpen(Session session)
+    {
+        System.out.println("Session "+session+" is Connected");       
+    }
+    @OnMessage
+    public void TextMessage(Session session, String msg)
+    {
+        System.out.println(msg);
+        if (msg != null){   
+            try
+            {
+                System.out.println(msg);
+                JSONObject obj = new JSONObject(msg);
+                if(obj.getString("event").equals("info"))
+                {
+                    InfoMap.put(obj.getString("mac"),new String[] {session.getId(),obj.getString("epDev").replace("@", "\n"),obj.getString("epLoc").replace("@", "\n"),obj.getString("zbDev").replace("@", "\n"),obj.getString("zbQue").replace("@", "\n")});
+                    SocketMap.put(session.getId(), session);
+                    System.out.println("System config for "+obj.getString("mac")+" is :");
+                    for(String s:InfoMap.get(obj.getString("mac")))
+                    {
+                        System.out.println(s);
+                   }
+                    // Example use of hash map storage and print functions.
+                    String macId = obj.getString("mac");
+                    String id = InfoMap.get(macId)[0];
+                    System.out.println("Socket session for "+macId+": -> "+     SocketMap.get(id));
+               PrintLabel(macId,InfoMap.get(macId)[4].split("\n")[0],"Item1", "29/10/1993");
+                PrintReceipt(macId,"network",InfoMap.get(macId)[2].split("\n")[0],"2","item1 item2", "25 30");
+            }
+            
+          } catch (JSONException e) {
+               e.printStackTrace();
+            }
+        }   
+    }
+  
+    public  void PrintLabel(String macId,String Queue,String name, String date){
+        String sessionId = InfoMap.get(macId)[0];
+        Session session = SocketMap.get(sessionId);
+        String cmd = "{\"event\":\"label\",\"itemName\":\""+name+"\",\"deliveryDate\":\""+date+"\",\"queue\":\""+Queue+"\"}";
+        try {
+        if (session != null) {
+            session.getBasicRemote().sendText(cmd);
+        }
+        else {
+            System.out.println("Requested socket is dissconnected");
+        }
+        } catch (IOException e1) {
+        
+        }
+    }
+    public void PrintReceipt(String macId,String Interface,String id,String quantity,String Items, String Costs){
+        String sessionId = InfoMap.get(macId)[0];
+        Session session = SocketMap.get(sessionId);
+        System.out.println("-------------->"+Items);
+        String cmd = "{\"event\":\"receipt\",\"Interface\":\""+Interface+"\",\"id\":\""+id+"\", \"quantity\":\""+quantity+"\", \"items\":\""+Items+"\" , \"costs\":\""+Costs+"\"}";
+        try{
+        if (session != null) {
+           
+            session.getBasicRemote().sendText(cmd);
+        }
+        else {
+            System.out.println("Requested socket is dissconnected");
+        }
+        } catch (IOException e1) {
+          
+        }
+    }
+    @OnClose
+    public void onClose(Session session) {
+        SocketMap.remove(session.getId());
+        System.out.println("<------ "+session+" Session is Closed ------>  ");
+          
+   }
+}
Index: specialpurpose/ecommerce/webapp/websocket/WEB-INF/web.xml
===================================================================
--- specialpurpose/ecommerce/webapp/websocket/WEB-INF/web.xml	(revision 0)
+++ specialpurpose/ecommerce/webapp/websocket/WEB-INF/web.xml	(working copy)
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
+  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
+                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
+  version="3.1"
+  metadata-complete="true">
+
+    <description>
+      Servlet and JSP Examples.
+    </description>
+    <display-name>Servlet and JSP Examples</display-name>
+
+    <filter>
+        <filter-name>Request Dumper Filter</filter-name>
+        <filter-class>org.apache.catalina.filters.RequestDumperFilter</filter-class>
+    </filter>
+
+    <!-- Example filter to set character encoding on each request -->
+    <filter>
+        <filter-name>Set Character Encoding</filter-name>
+        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
+        <async-supported>true</async-supported>
+        <init-param>
+            <param-name>encoding</param-name>
+            <param-value>UTF-8</param-value>
+        </init-param>
+        <init-param>
+            <param-name>ignore</param-name>
+            <param-value>false</param-value>
+        </init-param>
+    </filter>
+    <welcome-file-list>
+        <welcome-file>index.html</welcome-file>
+        <welcome-file>index.xhtml</welcome-file>
+        <welcome-file>index.htm</welcome-file>
+        <welcome-file>index.jsp</welcome-file>
+    </welcome-file-list>
+
+</web-app>
